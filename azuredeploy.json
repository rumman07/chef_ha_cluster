{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/chef-ha-cluster/scripts"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""  
    },
    "_secretsLocation": {
      "type": "string",
      "metadata": {
        "description": "URL of the Standard storage account blob container to receive shared secrets and config files. (ie. https://mystandardstorage.blob.core.windows.net/artifactsfolder )"
      }
    },
    "_secretsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Generated Shared Acccess Signature token to access _secretsLocation"
      }
    },
    "adminUsername": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "ubuntu",
      "metadata": {
        "description": "Administrator username on all VMs"
      }
    },
    "chefBEType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Chef BE VM Storage Type must match chefBEvmSize"
      }
    },
    "chefBEvmSize": {
      "type": "string",
      "defaultValue": "Standard_D3_v2",
      "allowedValues": [
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5"
      ],
      "minLength": 1,
      "metadata": {
        "description": "Chef BE VM Size must match chefBEType"
      }
    },
    "chefDNSName": {
      "type": "string",
      "metadata": {
        "description": "DNS name used for public IP addresses and as base for naming other resources. Must be globally unique and 3 to 61 characters long."
      },
      "minLength": 3,
      "maxLength": 61
    },
    "chefFEType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Chef FE VM Storage Type must match chefFEvmSize"
      }
    },
    "chefFEvmSize": {
      "type": "string",
      "defaultValue": "Standard_F4",
      "allowedValues": [
        "Standard_F1",
        "Standard_F2",
        "Standard_F4",
        "Standard_F16",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5"
      ],
      "minLength": 1,
      "metadata": {
        "description": "Chef FE VM Size must match chefFEType"
      }
    },
    "sshKeyData": {
      "type": "string",
      "metadata": {
        "description": "SSH rsa public key file as a string."
      }
    },
    "storageURL": {
      "type": "string",
      "metadata": {
        "description": "URL for Azure Storage should need changing for regional only"
      },
      "defaultValue": "core.windows.net"
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNET"
      }
    },
    "virtualNetworkResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNET resource group"
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the subnet in the virtual network you want to use"
      }
    },
    "ubuntuVersion": {
      "type": "string",
      "defaultValue": "18.04-LTS",
      "metadata": {
        "description": "Ubuntu version"
      }
    }
  },
  "variables": {
    "addressPrefix": "10.0.0.0/16",
    "bePoolName": "chefpool",
    "BEStorageAccountContainerName": "vhds",
    "ChefBEAvailName": "BEAvail",
    "chefbeName": "[concat('chefbe', uniqueString(resourceGroup().id))]",
    "ChefFEAvailName": "FEAvail",
    "cheffeName": "[concat('cheffe', uniqueString(resourceGroup().id))]",
    "FE0setupscriptScriptFileName": "FE0Setup.sh",
    "FEsetupscriptScriptFileName": "FESetup.sh",
    "FEStorageAccountContainerName": "vhds",
    "FollowerSetupScriptFileName": "BEFollowerSetup.sh",
    "frontEndIPConfigID": "[concat(variables('lbID'), '/frontendIPConfigurations/loadBalancerFrontEnd')]",
    "imageReference": "[variables('osType')]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]",
    "lbProbeID": "[concat(variables('lbID'),'/probes/https')]",
    "LeaderSetupScriptFileName": "BELeaderSetup.sh",
    "loadBalancerName": "cheffelb",
    "location": "[resourceGroup().location]",
    "osType": {
      "publisher": "Canonical",
      "offer": "UbuntuServer",
      "sku": "[parameters('ubuntuVersion')]",
      "version": "latest"
    },
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
    "publicIPAddressName": "chefpublicip",
    "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
    "subnetName": "chefsubnet",
    "subnetPrefix": "10.0.0.0/24",
    "subnetRef": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'),  parameters('subnetName'))]",
    "virtualNetworkName": "chefvnet",
    "tagvalues": {
      "provider": "[toUpper('33194f91-eb5f-4110-827a-e95f640a9e46')]"
    }
  },
  "resources": [
    {
      "name": "[variables('chefbeName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "BEStorage",
        "provider": "[variables('tagvalues').provider]"
      },
      "properties": {
        "accountType": "[parameters('chefBEType')]"
      }
    },
    {
      "name": "[variables('cheffeName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "FEStorage",
        "provider": "[variables('tagvalues').provider]"
      },
      "properties": {
        "accountType": "[parameters('chefFEType')]"
      }
    },
    
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('loadBalancerName')]",
      "location": "[variables('location')]",
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "FELoadBalancer",
        "provider": "[variables('tagvalues').provider]"
      },

      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
             "properties": {
                "subnet": {
                  "id": "[variables('subnetRef')]"
                }
              }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('bePoolName')]"
          }
        ],
        "inboundNatRules": [
          {
            "name": "ssh-fe0",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 50000,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          },
          {
            "name": "ssh-fe1",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 50001,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          },
          {
            "name": "ssh-fe2",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 50002,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          }
        ],
        "probes": [
          {
            "name": "https",
            "properties": {
              "protocol": "Tcp",
              "port": 443
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "https",
            "properties": {
              "protocol": "Tcp",
              "backendAddressPool": {
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"
              },
              "backendPort": 443,
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "frontendPort": 443,
              "probe": {
                "id": "[variables('lbProbeID')]"
              },
              "loadDistribution": "SourceIPProtocol"
            }
          },
          {
            "name": "http",
            "properties": {
              "protocol": "Tcp",
              "backendAddressPool": {
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"
              },
              "backendPort": 80,
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "frontendPort": 80,
              "probe": {
                "id": "[variables('lbProbeID')]"
              },
              "loadDistribution": "SourceIPProtocol"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('ChefBEAvailName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-12-01", 

      "dependsOn": [],
      "tags": {
        "displayName": "BEAvailSet",
        "provider": "[variables('tagvalues').provider]"
      },
      "sku": {
        "name": "Aligned"
        },
      "properties": {
        "platformUpdateDomainCount": 3,
        "platformFaultDomainCount": 3
      }
    },
    {
      "name": "[variables('ChefFEAvailName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-12-01", 
      "dependsOn": [],
      "tags": {
        "displayName": "FEAvailSet",
        "provider": "[variables('tagvalues').provider]"
      },
      "sku": {
        "name": "Aligned"
        },
      "properties": {
        "platformUpdateDomainCount": 3,
        "platformFaultDomainCount": 3
      }
    },
    {
      "name": "dln-awuchefbe0Nic",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[variables('location')]",
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "dln-awuchefbe0Nic",
        "provider": "[variables('tagvalues').provider]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('SubnetRef')]"
              },
              "privateIPAddress": "10.217.17.185"
            }
          }
        ]
      }
    },
    {
      "name": "dln-awuchefbe0",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[variables('location')]",
      "apiVersion": "2017-03-30", 
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('chefbeName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', 'dln-awuchefbe0Nic')]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('ChefBEAvailName'))]"
      ],
      "tags": {
        "displayName": "dln-awuchefbe0",
        "provider": "[variables('tagvalues').provider]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('chefBEvmSize')]"
        },
        "osProfile": {
          "computerName": "dln-awuchefbe0",
          "adminUsername": "[parameters('adminusername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshKeyData')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            
            "name": "[concat('dln-awuchefbe0','_OSDisk')]",  
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'dln-awuchefbe0Nic')]"
            }
          ]
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('ChefBEAvailName'))]"
        }
      },
      "resources": [
        {
          "name": "BE0Setup",
          "type": "extensions",
          "location": "[variables('location')]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', 'dln-awuchefbe0')]"
          ],
          "tags": {
            "displayName": "BE0Setup"
          },
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(parameters('_artifactsLocation'), 'scripts/', variables('LeaderSetupScriptFileName'), parameters('_artifactsLocationSasToken'))]"
              ]
            },
            "protectedSettings": {
              "commandToExecute": "[concat('sh ', variables('LeaderSetupScriptFileName'), ' \"', parameters('_secretsLocation'), '\" \"', parameters('_secretsLocationSasToken'), '\"')]"
            }
          }
        }
      ]
    },
    {
      "name": "dln-awuchefbe1Nic",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[variables('location')]",
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "dln-awuchefbe1Nic",
        "provider": "[variables('tagvalues').provider]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('SubnetRef')]"
              },
              "privateIPAddress": "10.217.17.186"
            }
          }
        ]
      }
    },
    {
      "name": "dln-awuchefbe1",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[variables('location')]",
      "apiVersion": "2017-03-30", 
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('chefbeName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', 'dln-awuchefbe1Nic')]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('ChefBEAvailName'))]"
      ],
      "tags": {
        "displayName": "dln-awuchefbe1",
        "provider": "[variables('tagvalues').provider]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('chefBEvmSize')]"
        },
        "osProfile": {
          "computerName": "dln-awuchefbe1",
          "adminUsername": "[parameters('adminusername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshKeyData')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            "name": "[concat('dln-awuchefbe1','_OSDisk')]", 
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'dln-awuchefbe1Nic')]"
            }
          ]
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('ChefBEAvailName'))]"
        }
      },
      "resources": [
        {
          "name": "BE1Setup",
          "type": "extensions",
          "location": "[variables('location')]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', 'dln-awuchefbe1')]",
            "[resourceId('Microsoft.Compute/virtualMachines/extensions', 'dln-awuchefbe0', 'BE0Setup')]"
          ],
          "tags": {
            "displayName": "BE1Setup"
          },
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(parameters('_artifactsLocation'), 'scripts/', variables('FollowerSetupScriptFileName'), parameters('_artifactsLocationSasToken'))]"
              ]
            },
            "protectedSettings": {
              "commandToExecute": "[concat('sh ', variables('FollowerSetupScriptFileName'), ' \"', parameters('_secretsLocation'), '\" \"', parameters('_secretsLocationSasToken'), '\"')]"
            }
          }
        }
      ]
    },
    {
      "name": "dln-awuchefbe2Nic",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[variables('location')]",
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "dln-awuchefbe2Nic",
        "provider": "[variables('tagvalues').provider]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('SubnetRef')]"
              },
              "privateIPAddress": "10.217.17.187"
            }
          }
        ]
      }
    },
    {
      "name": "dln-awuchefbe2",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[variables('location')]",
      "apiVersion": "2017-03-30", 
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('chefbeName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', 'dln-awuchefbe2Nic')]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('ChefBEAvailName'))]"
      ],
      "tags": {
        "displayName": "dln-awuchefbe2",
        "provider": "[variables('tagvalues').provider]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('chefBEvmSize')]"
        },
        "osProfile": {
          "computerName": "dln-awuchefbe2",
          "adminUsername": "[parameters('adminusername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshKeyData')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            
           "name": "[concat('dln-awuchefbe2','_OSDisk')]", 
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'dln-awuchefbe2Nic')]"
            }
          ]
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('ChefBEAvailName'))]"
        }
      },
      "resources": [
        {
          "name": "BE2Setup",
          "type": "extensions",
          "location": "[variables('location')]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', 'dln-awuchefbe2')]",
            "[resourceId('Microsoft.Compute/virtualMachines/extensions', 'dln-awuchefbe0', 'BE0Setup')]",
            "[resourceId('Microsoft.Compute/virtualMachines/extensions', 'dln-awuchefbe1', 'BE1Setup')]"
          ],
          "tags": {
            "displayName": "BE2Setup"
          },
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(parameters('_artifactsLocation'), 'scripts/', variables('FollowerSetupScriptFileName'), parameters('_artifactsLocationSasToken'))]"
              ]
            },
            "protectedSettings": {
              "commandToExecute": "[concat('sh ', variables('FollowerSetupScriptFileName'), ' \"', parameters('_secretsLocation'), '\" \"', parameters('_secretsLocationSasToken'), '\"')]"
            }
          }
        }
      ]
    },
    {
      "name": "dln-awucheffe0Nic",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[variables('location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
      ],
      "tags": {
        "displayName": "dln-awucheffe0Nic",
        "provider": "[variables('tagvalues').provider]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('SubnetRef')]"
              },
              "privateIPAddress": "10.217.17.188",
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatRules/ssh-fe0')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "dln-awucheffe0",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[variables('location')]",
      "apiVersion": "2017-03-30", 
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('cheffeName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', 'dln-awucheffe0Nic')]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('ChefFEAvailName'))]"
      ],
      "tags": {
        "displayName": "dln-awucheffe0",
        "provider": "[variables('tagvalues').provider]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('chefFEvmSize')]"
        },
        "osProfile": {
          "computerName": "dln-awucheffe0",
          "adminUsername": "[parameters('adminusername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshKeyData')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            
            "name": "[concat('dln-awucheffe0','_OSDisk')]", 
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'dln-awucheffe0Nic')]"
            }
          ]
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('ChefFEAvailName'))]"
        }
      },
      "resources": [
        {
          "name": "FE0Setup",
          "type": "extensions",
          "location": "[variables('location')]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', 'dln-awucheffe0')]",
            "[resourceId('Microsoft.Compute/virtualMachines/extensions', 'dln-awuchefbe0', 'BE0Setup')]",
            "[resourceId('Microsoft.Compute/virtualMachines/extensions', 'dln-awuchefbe1', 'BE1Setup')]",
            "[resourceId('Microsoft.Compute/virtualMachines/extensions', 'dln-awuchefbe2', 'BE2Setup')]"
          ],
          "tags": {
            "displayName": "FE0Setup"
          },
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(parameters('_artifactsLocation'), 'scripts/', variables('FE0setupscriptScriptFileName'), parameters('_artifactsLocationSasToken'))]"
              ]
            },
            "protectedSettings": {
              "commandToExecute": "[concat('sh ', variables('FE0setupscriptScriptFileName'), ' \"', parameters('_secretsLocation'), '\" \"', parameters('_secretsLocationSasToken'), '\"')]"
            }
          }
        }
      ]
    },
    {
      "name": "dln-awucheffe1Nic",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[variables('location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
      ],
      "tags": {
        "displayName": "dln-awucheffe1Nic",
        "provider": "[variables('tagvalues').provider]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('SubnetRef')]"
              },
              "privateIPAddress": "10.217.17.189",
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatRules/ssh-fe1')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "dln-awucheffe1",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[variables('location')]",
      "apiVersion":  "2017-03-30", 
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('cheffeName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', 'dln-awucheffe1Nic')]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('ChefFEAvailName'))]"
      ],
      "tags": {
        "displayName": "dln-awucheffe1",
        "provider": "[variables('tagvalues').provider]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('chefFEvmSize')]"
        },
        "osProfile": {
          "computerName": "dln-awucheffe1",
          "adminUsername": "[parameters('adminusername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshKeyData')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            "name": "[concat('dln-awucheffe1','_OSDisk')]", 
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'dln-awucheffe1Nic')]"
            }
          ]
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('ChefFEAvailName'))]"
        }
      },
      "resources": [
        {
          "name": "FE1Setup",
          "type": "extensions",
          "location": "[variables('location')]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', 'dln-awucheffe1')]",
            "[resourceId('Microsoft.Compute/virtualMachines/extensions', 'dln-awucheffe0', 'FE0Setup')]"
          ],
          "tags": {
            "displayName": "FE1Setup"
          },
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(parameters('_artifactsLocation'), 'scripts/', variables('FEsetupscriptScriptFileName'), parameters('_artifactsLocationSasToken'))]"
              ]
            },
            "protectedSettings": {
              "commandToExecute": "[concat('sh ', variables('FEsetupscriptScriptFileName'), ' \"', parameters('_secretsLocation'), '\" \"', parameters('_secretsLocationSasToken'), '\"')]"
            }
          }
        }
      ]
    },
    {
      "name": "dln-awucheffe2Nic",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[variables('location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
      ],
      "tags": {
        "displayName": "dln-awucheffe2Nic",
        "provider": "[variables('tagvalues').provider]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('SubnetRef')]"
              },
              "privateIPAddress": "10.217.17.190",
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatRules/ssh-fe2')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "dln-awucheffe2",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[variables('location')]",
      "apiVersion": "2017-03-30", 
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('cheffeName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', 'dln-awucheffe2Nic')]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('ChefFEAvailName'))]"
      ],
      "tags": {
        "displayName": "dln-awucheffe2",
        "provider": "[variables('tagvalues').provider]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('chefFEvmSize')]"
        },
        "osProfile": {
          "computerName": "dln-awucheffe2",
          "adminUsername": "[parameters('adminusername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshKeyData')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
           
            "name": "[concat('dln-awucheffe2','_OSDisk')]", 
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'dln-awucheffe2Nic')]"
            }
          ]
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('ChefFEAvailName'))]"
        }
      },
      "resources": [
        {
          "name": "FE2Setup",
          "type": "extensions",
          "location": "[variables('location')]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', 'dln-awucheffe2')]",
            "[resourceId('Microsoft.Compute/virtualMachines/extensions', 'dln-awucheffe0', 'FE0Setup')]"
          ],
          "tags": {
            "displayName": "FE2Setup"
          },
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(parameters('_artifactsLocation'), 'scripts/', variables('FEsetupscriptScriptFileName'), parameters('_artifactsLocationSasToken'))]"
              ]
            },
            "protectedSettings": {
              "commandToExecute": "[concat('sh ', variables('FEsetupscriptScriptFileName'), ' \"', parameters('_secretsLocation'), '\" \"', parameters('_secretsLocationSasToken'), '\"')]"
            }
          }
        }
      ]
    }
  ]
}